[package]
name = "rsa"
version = "0.9.6"
authors = ["RustCrypto Developers", "dignifiedquire <dignifiedquire@gmail.com>"]
edition = "2021"
description = "Pure Rust RSA implementation"
license = "MIT OR Apache-2.0"
documentation = "https://docs.rs/rsa"
repository = "https://github.com/RustCrypto/RSA"
keywords = ["rsa", "encryption", "security", "crypto"]
categories = ["cryptography"]
readme = "README.md"
rust-version = "1.65"

[dependencies]
der = { version = "0.7",  path = "./vendor/formats-der-v0.7.8/der" }

num-bigint = { version = "0.8", features = ["i128", "prime", "zeroize"], default-features = false, package = "num-bigint-dig", path = "./vendor/num-bigint-0.8.2" }
num-traits = { version= "0.2.9", default-features = false, features = ["libm"] }
num-integer = { version = "0.1.39", default-features = false }
rand_core = { version = "0.6.4", default-features = false }
const-oid = { version = "0.9", default-features = false }
subtle = { version = "2.1.1", default-features = false }
digest = { version = "0.10.5", default-features = false, features = ["alloc", "oid"] }
pkcs1 = { version = "0.7", default-features = false, features = ["alloc", "pkcs8"], path = "./vendor/formats-der-v0.7.8/pkcs1" }
pkcs8 = { version = "0.10", default-features = false, features = ["alloc"], path = "./vendor/formats-der-v0.7.8/pkcs8" }
signature = { version = ">2.0, <2.3", default-features = false , features = ["alloc", "digest", "rand_core"] }
spki = { version = "0.7", default-features = false, features = ["alloc"], path = "./vendor/formats-der-v0.7.8/spki"}
zeroize = { version = "=1.3.0", features = ["alloc"] }

# optional dependencies
sha1 = { version = "0.10.5", optional = true, default-features = false, features = ["oid"] }
sha2 = { version = "0.10.6", optional = true, default-features = false, features = ["oid"] }
serde = { version = "1.0.184", optional = true, default-features = false, features = ["derive"] }

[dev-dependencies]
base64ct = { version = "1", features = ["alloc"] }
hex-literal = "0.4.1"
proptest = "1"
serde_test = "1.0.89"
rand_xorshift = "0.3"
rand_chacha = "0.3"
rand = "0.8"
rand_core = { version = "0.6", default-features = false }
sha1 = { version = "0.10.5", default-features = false, features = ["oid"] }
sha2 = { version = "0.10.6", default-features = false, features = ["oid"] }
sha3 = { version = "0.10.7", default-features = false, features = ["oid"] }

[[bench]]
name = "key"

[features]
default = ["std", "pem", "u64_digit"]
hazmat = []
getrandom = ["rand_core/getrandom"]
nightly = ["num-bigint/nightly"]
serde = ["dep:serde", "num-bigint/serde"]
pem = ["pkcs1/pem", "pkcs8/pem"]
pkcs5 = ["pkcs8/encryption"]
u64_digit = ["num-bigint/u64_digit"]
std = ["digest/std", "pkcs1/std", "pkcs8/std", "rand_core/std", "signature/std"]

[package.metadata.docs.rs]
features = ["std", "pem", "serde", "hazmat", "sha2"]
rustdoc-args = ["--cfg", "docsrs"]

[profile.dev]
opt-level = 2

[patch.crates-io]
# A global patch crates-io block is used to avoid cyclic dependencies errors
# If we use other crates from the RustCrypto ecosystem, they may pull redundant
# versions of dependencies.
base16ct          = { path = "./vendor/formats-der-v0.7.8/base16ct" }
base32ct          = { path = "./vendor/formats-der-v0.7.8/base32ct" }
base64ct          = { path = "./vendor/formats-der-v0.7.8/base64ct" }
cmpv2             = { path = "./vendor/formats-der-v0.7.8/cmpv2" }
cms               = { path = "./vendor/formats-der-v0.7.8/cms" }
const-oid         = { path = "./vendor/formats-der-v0.7.8/const-oid" }
crmf              = { path = "./vendor/formats-der-v0.7.8/crmf" }
der               = { path = "./vendor/formats-der-v0.7.8/der" }
der_derive        = { path = "./vendor/formats-der-v0.7.8/der/derive" }
pem-rfc7468       = { path = "./vendor/formats-der-v0.7.8/pem-rfc7468" }
pkcs1             = { path = "./vendor/formats-der-v0.7.8/pkcs1" }
pkcs5             = { path = "./vendor/formats-der-v0.7.8/pkcs5" }
pkcs7             = { path = "./vendor/formats-der-v0.7.8/pkcs7" }
pkcs8             = { path = "./vendor/formats-der-v0.7.8/pkcs8" }
pkcs12            = { path = "./vendor/formats-der-v0.7.8/pkcs12" }
sec1              = { path = "./vendor/formats-der-v0.7.8/sec1" }
serdect           = { path = "./vendor/formats-der-v0.7.8/serdect" }
spki              = { path = "./vendor/formats-der-v0.7.8/spki" }
tai64             = { path = "./vendor/formats-der-v0.7.8/tai64" }
tls_codec         = { path = "./vendor/formats-der-v0.7.8/tls_codec" }
tls_codec_derive  = { path = "./vendor/formats-der-v0.7.8/tls_codec/derive" }
x509-tsp               = { path = "./vendor/formats-der-v0.7.8/x509-tsp" }
x509-cert         = { path = "./vendor/formats-der-v0.7.8/x509-cert" }
x509-ocsp         = { path = "./vendor/formats-der-v0.7.8/x509-ocsp" }

num-bigint-dig = { path = "./vendor/num-bigint-0.8.2" }

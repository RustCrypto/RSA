use const_oid::db::rfc6960::ID_PKIX_OCSP_BASIC;
use der::asn1::{Null, ObjectIdentifier};
use der::{Decode, Encode};
use hex_literal::hex;
use x509_cert::ext::pkix::CrlReason;
use x509_ocsp::Version::V1;
use x509_ocsp::*;

#[test]
fn decode_ocsp_req_ca_signed() {
    // request generated using openssl via this command:
    // openssl ocsp -noverify -no_nonce -respout ~/Desktop/ocspdigicert.resp
    // -reqout ~/Desktop/ocspdigicert.req -issuer ~/Desktop/DigiCertGlobalCAG2.crt
    // -cert ~/Desktop/amazon.der -url http://ocsp.digicert.com -header "HOST" "ocsp.digicert.com" -text

    pub const PKIXALG_SHA1: ObjectIdentifier = ObjectIdentifier::new_unwrap("1.3.14.3.2.26");

    let ocsp_req =
        OcspRequest::from_der(&hex!("3051304F304D304B3049300906052B0E03021A05000414A87E303106E4E88565CFE952598FA6DA7C00532F0414246E2B2DD06A925151256901AA9A47A689E7402002100E4239AB85E2E6A27C52C6DE9B9078D9")[..]).unwrap();
    assert_eq!(ocsp_req.tbs_request.version, V1);
    //assert!(ocsp_req.tbs_request.requestor_name.is_none());
    assert_eq!(ocsp_req.tbs_request.request_list.len(), 1);
    let req = &ocsp_req.tbs_request.request_list[0];
    assert_eq!(req.req_cert.hash_algorithm.oid, PKIXALG_SHA1);
    assert!(req.req_cert.hash_algorithm.parameters.is_some());
    assert_eq!(
        req.req_cert
            .hash_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );
    assert_eq!(
        req.req_cert.issuer_name_hash.as_bytes(),
        &hex!("A87E303106E4E88565CFE952598FA6DA7C00532F")
    );
    assert_eq!(
        req.req_cert.issuer_key_hash.as_bytes(),
        &hex!("246E2B2DD06A925151256901AA9A47A689E74020")
    );
    assert_eq!(
        req.req_cert.serial_number.as_bytes(),
        &hex!("0E4239AB85E2E6A27C52C6DE9B9078D9")
    );

    let reenc = ocsp_req.to_der().unwrap();
    assert_eq!(reenc, &hex!("3051304F304D304B3049300906052B0E03021A05000414A87E303106E4E88565CFE952598FA6DA7C00532F0414246E2B2DD06A925151256901AA9A47A689E7402002100E4239AB85E2E6A27C52C6DE9B9078D9")[..])
}

#[test]
fn decode_ocsp_resp_ca_signed() {
    // response generated using openssl via this command:
    // openssl ocsp -noverify -no_nonce -respout ~/Desktop/ocspdigicert.resp
    // -reqout ~/Desktop/ocspdigicert.req -issuer ~/Desktop/DigiCertGlobalCAG2.crt
    // -cert ~/Desktop/amazon.der -url http://ocsp.digicert.com -header "HOST" "ocsp.digicert.com" -text


    let ocsp_resp =
        OcspResponse::from_der(&hexunwrap();

    assert_eq!(ocsp_resp.response_status, OcspResponseStatus::Successful);
    assert!(ocsp_resp.response_bytes.is_some());
    let response_bytes = ocsp_resp.response_bytes.as_ref().unwrap();
    assert_eq!(response_bytes.response_type, ID_PKIX_OCSP_BASIC);

    pub const PKIXALG_SHA256_WITH_RSA_ENCRYPTION: ObjectIdentifier =
        ObjectIdentifier::new_unwrap("1.2.840.113549.1.1.11");
    pub const PKIXALG_SHA1: ObjectIdentifier = ObjectIdentifier::new_unwrap("1.3.14.3.2.26");

    let bor = BasicOcspResponse::from_der(response_bytes.response.as_bytes()).unwrap();
    assert_eq!(
        bor.signature_algorithm.oid,
        PKIXALG_SHA256_WITH_RSA_ENCRYPTION
    );
    assert!(bor.signature_algorithm.parameters.is_some());
    assert_eq!(
        bor.signature_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );

    assert_eq!(bor.tbs_response_data.version, V1);

    match bor.tbs_response_data.responder_id {
        ResponderId::ByKey(kh) => {
            assert_eq!(
                kh.as_bytes(),
                &hex!("246E2B2DD06A925151256901AA9A47A689E74020")
            );
        }
        _ => {
            panic!("Expected ByKey and got something else")
        }
    }

    assert_eq!(
        bor.tbs_response_data
            .produced_at
            .to_unix_duration()
            .as_secs(),
        1643775145
    );
    assert_eq!(bor.tbs_response_data.responses.len(), 1);
    let sr = &bor.tbs_response_data.responses[0];
    assert_eq!(sr.cert_id.hash_algorithm.oid, PKIXALG_SHA1);
    assert!(sr.cert_id.hash_algorithm.parameters.is_some());
    assert_eq!(
        sr.cert_id
            .hash_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );
    assert_eq!(
        sr.cert_id.issuer_name_hash.as_bytes(),
        &hex!("A87E303106E4E88565CFE952598FA6DA7C00532F")
    );
    assert_eq!(
        sr.cert_id.issuer_key_hash.as_bytes(),
        &hex!("246E2B2DD06A925151256901AA9A47A689E74020")
    );
    assert_eq!(
        sr.cert_id.serial_number.as_bytes(),
        &hex!("0E4239AB85E2E6A27C52C6DE9B9078D9")
    );

    match sr.cert_status {
        CertStatus::Good(g) => {
            assert_eq!(
                g.to_der().unwrap().as_slice(),
                Null.to_der().unwrap().as_slice()
            );
        }
        _ => {
            panic!("Expected Good and got something other")
        }
    }

    assert_eq!(sr.this_update.to_unix_duration().as_secs(), 1643774221);
    assert!(sr.next_update.is_some());
    assert_eq!(
        sr.next_update.unwrap().to_unix_duration().as_secs(),
        1644376321
    );

    let reenc = ocsp_resp.to_der().unwrap();
    assert_eq!(reenc, &hex
}

#[test]
fn decode_ocsp_req_delegated() {
    // request generated using openssl via this command:
    // openssl ocsp -noverify -no_nonce -respout ~/Desktop/ocspdod.resp -reqout ~/Desktop/ocspdod.req
    // -issuer ~/Desktop/email_ca_59.der -cert ~/Desktop/ee.der -url http://ocsp.disa.mil
    // -header "HOST" "ocsp.disa.mil" -text

    pub const PKIXALG_SHA1: ObjectIdentifier = ObjectIdentifier::new_unwrap("1.3.14.3.2.26");

    let ocsp_req =
        OcspRequest::from_der(&hex!("304530433041303F303D300906052B0E03021A050004140F0D5890F551D42ACF5431B7F42A321F7B74A4730414771441A65D9526D01DFF953B628CEAB7B55D3B92020401017467")[..]).unwrap();
    assert_eq!(ocsp_req.tbs_request.version, V1);
    //assert!(ocsp_req.tbs_request.requestor_name.is_none());
    assert_eq!(ocsp_req.tbs_request.request_list.len(), 1);
    let req = &ocsp_req.tbs_request.request_list[0];
    assert_eq!(req.req_cert.hash_algorithm.oid, PKIXALG_SHA1);
    assert!(req.req_cert.hash_algorithm.parameters.is_some());
    assert_eq!(
        req.req_cert
            .hash_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );
    assert_eq!(
        req.req_cert.issuer_name_hash.as_bytes(),
        &hex!("0F0D5890F551D42ACF5431B7F42A321F7B74A473")
    );
    assert_eq!(
        req.req_cert.issuer_key_hash.as_bytes(),
        &hex!("771441A65D9526D01DFF953B628CEAB7B55D3B92")
    );
    assert_eq!(req.req_cert.serial_number.as_bytes(), &hex!("01017467"));

    let reenc = ocsp_req.to_der().unwrap();
    assert_eq!(reenc, &hex!("304530433041303F303D300906052B0E03021A050004140F0D5890F551D42ACF5431B7F42A321F7B74A4730414771441A65D9526D01DFF953B628CEAB7B55D3B92020401017467")[..])
}

#[test]
fn decode_ocsp_resp_delegated() {
    // response generated using openssl via this command:
    // openssl ocsp -noverify -no_nonce -respout ~/Desktop/ocspdod.resp -reqout ~/Desktop/ocspdod.req
    // -issuer ~/Desktop/email_ca_59.der -cert ~/Desktop/ee.der -url http://ocsp.disa.mil
    // -header "HOST" "ocsp.disa.mil" -text


    let ocsp_resp =
        OcspResponse::from_der(&hexunwrap();

    assert_eq!(ocsp_resp.response_status, OcspResponseStatus::Successful);
    assert!(ocsp_resp.response_bytes.is_some());
    let response_bytes = ocsp_resp.response_bytes.as_ref().unwrap();
    assert_eq!(response_bytes.response_type, ID_PKIX_OCSP_BASIC);

    pub const PKIXALG_SHA256_WITH_RSA_ENCRYPTION: ObjectIdentifier =
        ObjectIdentifier::new_unwrap("1.2.840.113549.1.1.11");
    pub const PKIXALG_SHA1: ObjectIdentifier = ObjectIdentifier::new_unwrap("1.3.14.3.2.26");

    let bor = BasicOcspResponse::from_der(response_bytes.response.as_bytes()).unwrap();
    assert_eq!(
        bor.signature_algorithm.oid,
        PKIXALG_SHA256_WITH_RSA_ENCRYPTION
    );
    assert!(bor.signature_algorithm.parameters.is_some());
    assert_eq!(
        bor.signature_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );

    assert_eq!(bor.tbs_response_data.version, V1);

    match bor.tbs_response_data.responder_id {
        ResponderId::ByKey(kh) => {
            assert_eq!(
                kh.as_bytes(),
                &hex!("ADB0A9B2DDE9D444B4DF80F599598E84AC5EC687")
            );
        }
        _ => {
            panic!("Expected ByKey and got something else")
        }
    }

    assert_eq!(
        bor.tbs_response_data
            .produced_at
            .to_unix_duration()
            .as_secs(),
        1643900556
    );
    assert_eq!(bor.tbs_response_data.responses.len(), 20);
    let sr = &bor.tbs_response_data.responses[10];

    assert_eq!(sr.cert_id.hash_algorithm.oid, PKIXALG_SHA1);
    assert!(sr.cert_id.hash_algorithm.parameters.is_some());
    assert_eq!(
        sr.cert_id
            .hash_algorithm
            .parameters
            .to_der()
            .unwrap()
            .as_slice(),
        Null.to_der().unwrap().as_slice()
    );
    assert_eq!(
        sr.cert_id.issuer_name_hash.as_bytes(),
        &hex!("0F0D5890F551D42ACF5431B7F42A321F7B74A473")
    );
    assert_eq!(
        sr.cert_id.issuer_key_hash.as_bytes(),
        &hex!("771441A65D9526D01DFF953B628CEAB7B55D3B92")
    );
    assert_eq!(sr.cert_id.serial_number.as_bytes(), &hex!("01017467"));

    match &sr.cert_status {
        CertStatus::Revoked(ri) => {
            assert!(ri.revocation_reason.is_some());
            assert_eq!(ri.revocation_reason.unwrap(), CrlReason::AffiliationChanged,);
            assert_eq!(ri.revocation_time.to_unix_duration().as_secs(), 1632934667,);
        }
        _ => {
            panic!("Expected Good and got something other")
        }
    }

    assert_eq!(sr.this_update.to_unix_duration().as_secs(), 1643848200);
    assert!(sr.next_update.is_some());
    assert_eq!(
        sr.next_update.unwrap().to_unix_duration().as_secs(),
        1644456600
    );

    let reenc = ocsp_resp.to_der().unwrap();
    assert_eq!(reenc, &hex
}
